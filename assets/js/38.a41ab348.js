(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{351:function(t,a,r){"use strict";r.r(a);var e=r(27),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"how-to-create-a-public-mirror-for-almalinux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-create-a-public-mirror-for-almalinux"}},[t._v("#")]),t._v(" How to create a public mirror for AlmaLinux")]),t._v(" "),a("p",[t._v("Mirrors are extremely important to provide a fast and reliable\ninfrastructure, and we are very grateful to people and organizations that\nhelp us with this. The current list of public mirrors can be found on the\n"),a("a",{attrs:{href:"https://mirrors.almalinux.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("mirrors.almalinux.org"),a("OutboundLink")],1),t._v(" website.")]),t._v(" "),a("p",[t._v("You can create a public AlmaLinux mirror in a few easy steps:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Make sure that you have enough free space: 500GB per major version is the suggested minimum. As there are currently three supported major versions (8, 9, and 10) (AlmaLinux OS Kitten being thought of separately, below) the recommended "),a("strong",[t._v("minimum")]),t._v(" storage space is 1.5TB. 2TB is more ideal. The current steady-state of the mirror is approximately 1TB. If you are also mirroring "),a("a",{attrs:{href:"https://wiki.almalinux.org/development/almalinux-os-kitten-10.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("AlmaLinux OS Kitten"),a("OutboundLink")],1),t._v(" we recommend 2.5TB.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Optional but recommended")]),t._v(" "),a("p",[t._v("Use updated version of "),a("code",[t._v("rsync")]),t._v(" with "),a("code",[t._v("xxhash")]),t._v(" support.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("xxhash")]),t._v(" provides a superior hashing algorithm to "),a("code",[t._v("rsync")]),t._v(" which lightens the load on the source and destination\nservers.\nWe maintain an up-to-date version\nof "),a("code",[t._v("rsync")]),t._v(" in the AlmaLinux backports repository. To use this repository on EL8 and EL9 distros:"),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" https://repo.almalinux.org/backports/almalinux-backports-rsync.repo "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--output")]),t._v(" /etc/yum.repos.d/almalinux-backports-rsync.repo\nyum "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" update "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rsync")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("You can verify that you have the expected version of "),a("code",[t._v("rsync")]),t._v(" and "),a("code",[t._v("xxhash")]),t._v(" support as follows:"),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rsync")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--version")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" xxhash\nxxh128 xxh3 xxh64 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xxhash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" md5 md4 sha1 none\n")])])])])])])]),t._v(" "),a("li",[a("p",[t._v("Synchronize with the official AlmaLinux mirror via "),a("code",[t._v("rsync")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("/usr/bin/rsync "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rlptvSH")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--exclude")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.~tmp~'")]),t._v(" --delete-delay --delay-updates rsync://rsync.repo.almalinux.org/almalinux/ /almalinux/dir/on/your/server/\n")])])]),a("ul",[a("li",[t._v("The official tier0 rsync mirrors are in Atlanta, GA, USA; Seattle, WA, USA; Frankfurt, Germany, and Tokyo, Japan. We use geolocation-based DNS steering to send your traffic to the closest tier0 mirror.")])])]),t._v(" "),a("li",[a("p",[t._v("Create a cron task to sync it periodically (we recommend updating the\nmirror every 3 hours):")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" */3 * * * /usr/bin/flock "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" /var/run/almalinux_rsync.lock "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"/usr/bin/rsync -rlptvSH --exclude='.~tmp~' --delete-delay --delay-updates rsync://rsync.repo.almalinux.org/almalinux/ /almalinux/dir/on/your/server/\"")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Optional Mirroring of AlmaLinux OS Kitten")]),t._v(" "),a("p",[t._v("We maintain AlmaLinux OS Kitten in a separate rsync module so you can choose whether or not to sync it. It is not required to be mirrored to be an AlmaLinux mirror, but all mirroring is welcomed and appreciated. Do keep in mind that the "),a("code",[t._v("almalinux-kitten")]),t._v(" module should be synced as its own top-level project and must NOT be placed inside of the main "),a("code",[t._v("almalinux")]),t._v(" target on your server. AlmaLinux Kitten mirroring requires very little extra bandwidth.")]),t._v(" "),a("ul",[a("li",[t._v("Initial sync:"),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("/usr/bin/rsync "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rlptvSH")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--exclude")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.~tmp~'")]),t._v(" --delete-delay --delay-updates rsync://rsync.kitten.repo.almalinux.org/almalinux-kitten/ /almalinux-kitten/dir/on/your/server/\n")])])])]),t._v(" "),a("li",[t._v("Cron:"),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" */3 * * * /usr/bin/flock "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" /var/run/almalinux_kitten_rsync.lock "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"/usr/bin/rsync -rlptvSH --exclude='.~tmp~' --delete-delay --delay-updates rsync://rsync.kitten.repo.almalinux.org/almalinux-kitten/ /almalinux-kitten/dir/on/your/server/\"")]),t._v("\n")])])])])])])]),t._v(" "),a("li",[a("p",[t._v("Ensure the accuracy of city, longitude, and latitude data for your mirror IP(s) with IPinfo at\n"),a("a",{attrs:{href:"https://ipinfo.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://ipinfo.io"),a("OutboundLink")],1),t._v(". Submit a "),a("a",{attrs:{href:"https://ipinfo.io/corrections",target:"_blank",rel:"noopener noreferrer"}},[t._v("correction request"),a("OutboundLink")],1),t._v(" with accurate city data\nif the information is incorrect. Our mirrorlist URL tries to serve the best mirror to a client based on IPinfo geolocation data\nso having accurate IPinfo data ensures the best possible experience for users.")])]),t._v(" "),a("li",[a("p",[t._v("Join the "),a("a",{attrs:{href:"https://lists.almalinux.org/mailman3/lists/mirror-announce.lists.almalinux.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("mirror-announce"),a("OutboundLink")],1),t._v(" mailing list to receive\nimportant mirror-related updates from the AlmaLinux team.")]),t._v(" "),a("p",[t._v("You may also consider joining the "),a("a",{attrs:{href:"https://lists.almalinux.org/mailman3/lists/mirror.lists.almalinux.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("mirror"),a("OutboundLink")],1),t._v(" mailing list for\ngeneral discussion/help related to mirrors.")]),t._v(" "),a("p",[t._v("We recommend joining the "),a("a",{attrs:{href:"https://chat.almalinux.org/almalinux/channels/mirrors",target:"_blank",rel:"noopener noreferrer"}},[t._v("mirrors channel on Mattermost"),a("OutboundLink")],1),t._v(" for any questions\nas well as updates from our team that impact mirror hosts in a live interactive format.")])]),t._v(" "),a("li",[a("p",[t._v("Fork the "),a("a",{attrs:{href:"https://github.com/AlmaLinux/mirrors/",target:"_blank",rel:"noopener noreferrer"}},[t._v("github.com/AlmaLinux/mirrors"),a("OutboundLink")],1),t._v("\nrepository and create a pull request that will add a YAML file describing\nyour mirror to the "),a("code",[t._v("mirrors.d")]),t._v(" directory.\nYou can use the "),a("a",{attrs:{href:"https://github.com/AlmaLinux/mirrors/blob/master/mirrors.d/repo.almalinux.org.yml",target:"_blank",rel:"noopener noreferrer"}},[t._v("official AlmaLinux repo file"),a("OutboundLink")],1),t._v("\nas an example. Your mirror does not have to provide all the protocols\nthat our main mirror provides, but either HTTP or HTTPS is required. Format of a mirror's config is described below.\nAlso, you can validate your config to use some JSON online validator using\n"),a("a",{attrs:{href:"https://github.com/AlmaLinux/mirrors/blob/yaml_snippets/json_schemas/mirror_config.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("that JSON schema"),a("OutboundLink")],1),t._v(" and converting your config to JSON.")])])]),t._v(" "),a("div",{staticClass:"language-YAML extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <domain name of a mirror"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e.g. almalinux.mirror.link"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud_type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <azure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("aws. It'll be required if a mirror is located in AWS/Azure cloud"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("http")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <http URL to a mirror"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e.g. http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//almalinux.mirror.link/almalinux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("https")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <https URL to a mirror"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e.g. https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//almalinux.mirror.link/almalinux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <rsync URL to a mirror"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e.g. rsync"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//almalinux.mirror.link/almalinux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ftp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <ftp URL to a mirror"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e.g. ftp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//almalinux.mirror.link/almalinux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if you are mirroring kitten as well provide only the protocols/URLs that you are hosting")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# remove this section if you are not mirroring kitten")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address_optional")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kitten")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("http")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <http URL to a mirror"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e.g. http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//almalinux.mirror.link/almalinux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("kitten"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("https")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <https URL to a mirror"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e.g. https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//almalinux.mirror.link/almalinux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("kitten"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <rsync URL to a mirror"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e.g. rsync"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//almalinux.mirror.link/almalinux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("kitten"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("update_frequency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <update frequency of a mirror"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e.g. 1h"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sponsor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <Name of a mirror's sponsor/holder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e.g. Some company name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sponsor_url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <URL of a mirror's sponsor/holder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e.g. http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//some.company.name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("email")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mail of a mirror's sponsor/holder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e.g. admin@some.company.name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("geolocation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("country")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <two"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("letter name of a country"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e.g. US"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state_province")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <name of a province"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e.g. New York.  Field is required even if blank."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("city")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <name of a city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e.g. New York"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("private")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("false. A mirror is available in some local network if the param is true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("monopoly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("false. The mirrors list contains only this private mirror for a suitable client if param is true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The list will be required if a mirror is local or cloud.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# It contains subnets behind which located a private mirror.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Also, it can be string and contains URL which returns json list with subnets")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("subnets")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" <network mask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# That parameter can specify ASN which is maintained by a mirror is located in cloud")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# It can be number or list of numbers:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# asn: 40162")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# asn:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - 41222")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - 91213")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# asn: [12345, 98765]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("asn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <ASN number or list of ASN numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" see https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//en.wikipedia.org/wiki/Autonomous_system_(Internet)"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(".\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The list will be required if a mirror is located in Azure/AWS cloud")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud_regions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" <cloud_region of Azure/AWS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e.g. australiacentral2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n\n")])])]),a("p",[t._v("You could find more information about creating a pull request in\n"),a("a",{attrs:{href:"https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub documentation"),a("OutboundLink")],1),t._v(".\nAfter reviewing the pull request your mirror will be published at the\n"),a("a",{attrs:{href:"https://mirrors.almalinux.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("mirrors.almalinux.org"),a("OutboundLink")],1),t._v(" page and will\nbe added to the mirrorlists that dnf package manager works with.")]),t._v(" "),a("p",[t._v("All mirror hosts are eligible for membership to the AlmaLinux OS Foundation.\nMake sure you submit your "),a("a",{attrs:{href:"https://almalinux.org/foundation/members/",target:"_blank",rel:"noopener noreferrer"}},[t._v("application for membership"),a("OutboundLink")],1),t._v("!")])])}),[],!1,null,null,null);a.default=n.exports}}]);