(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{377:function(a,t,s){"use strict";s.r(t);var e=s(27),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"using-generic-cloud-images-on-a-local-machine"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#using-generic-cloud-images-on-a-local-machine"}},[a._v("#")]),a._v(" Using Generic Cloud Images on a local machine")]),a._v(" "),t("p",[a._v("You can use the AlmaLinux OS 8 and 9 Generic Cloud images for testing, developing, manipulating and repackaging purposes on your local machine.")]),a._v(" "),t("p",[a._v("Required packages:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("osinfo-db")]),a._v(" for AlmaLinux OS support on the virtualization stack.")]),a._v(" "),t("li",[t("code",[a._v("qemu-img")]),a._v(" (RPM) (ArchLinux), "),t("code",[a._v("qemu-utils")]),a._v(" (DEB) for creating snapshots.")]),a._v(" "),t("li",[t("code",[a._v("virt-install")]),a._v(" (CLI) "),t("code",[a._v("virt-manager")]),a._v(" (GUI) (RPM), "),t("code",[a._v("virt-manager")]),a._v(" (ships with "),t("code",[a._v("virt-install")]),a._v(" too) (DEB) for creating VMs.")]),a._v(" "),t("li",[t("code",[a._v("xorriso")]),a._v(" or "),t("code",[a._v("genisoimage")]),a._v(" for creation of Cloud-init data ISOs.")]),a._v(" "),t("li",[t("code",[a._v("guestfs-tools")]),a._v(" (RPM) (ArchLinux), "),t("code",[a._v("libguestfs-tools")]),a._v(" (DEB) for inspecting and manipulating image content.")])]),a._v(" "),t("h2",{attrs:{id:"almalinux-guest-os-support"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#almalinux-guest-os-support"}},[a._v("#")]),a._v(" AlmaLinux Guest OS support")]),a._v(" "),t("p",[a._v("You need at least version "),t("code",[a._v("20210215")]),a._v(" for AlmaLinux and "),t("code",[a._v("20210426")]),a._v(" for other distributions "),t("code",[a._v("osinfo-db")]),a._v(" packages to support AlmaLinux as a guest OS.")]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),t("p",[t("code",[a._v("20210621")]),a._v(" and newer recommended for latest improvements.")])]),a._v(" "),t("p",[a._v("To check whether AlmaLinux OS is supported on the installed version of "),t("code",[a._v("osinfo-db")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("osinfo-query os "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" almalinux\n\n almalinux8           "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" AlmaLinux "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v("                                        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v("        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" http://almalinux.org/almalinux/8\n almalinux9           "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" AlmaLinux "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9")]),a._v("                                        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9")]),a._v("        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" http://almalinux.org/almalinux/9\n")])])]),t("p",[a._v("If the installed "),t("code",[a._v("osinfo-db")]),a._v(" doesn’t support either or any version of AlmaLinux OS, You can manually update the Osinfo database with the "),t("code",[a._v("--local")]),a._v(" option without overriding the installed "),t("code",[a._v("osinfo-db")]),a._v(" which is installed by the distribution's package manager. The new database will have precedence when the database is loaded.")]),a._v(" "),t("p",[a._v("Retrieve the latest "),t("code",[a._v("$osinfo_db_version")]),a._v(" from here (e.g., "),t("code",[a._v("20230719")]),a._v(") : "),t("a",{attrs:{href:"https://releases.pagure.org/libosinfo/?C=M;O=D",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://releases.pagure.org/libosinfo/?C=M;O=D"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("osinfo_db_version")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'20230719'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Replace with the latest version")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O")]),a._v(" https://releases.pagure.org/libosinfo/osinfo-db-"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$osinfo_db_version")]),a._v('"')]),a._v(".tar.xz "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Download")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" osinfo-db-import "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--local")]),a._v(" osinfo-db-"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$osinfo_db_version")]),a._v('"')]),a._v(".tar.xz "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Install")]),a._v("\n")])])]),t("p",[a._v("Refer to this guide to download and verify the cloud images: "),t("a",{attrs:{href:"https://wiki.almalinux.org/cloud/Generic-cloud.html#download-and-verification",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://wiki.almalinux.org/cloud/Generic-cloud.html#download-and-verification"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"create-a-snapshot-from-the-image"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-a-snapshot-from-the-image"}},[a._v("#")]),a._v(" Create a snapshot from the image")]),a._v(" "),t("p",[a._v("If you don’t want to modify the cloud image each time you create a VM, you can create a snapshot from the cloud image. The snapshot's virtual size can be different from the base image. In this example, we will use 20G instead of the base image's virtual size (10G). Cloud-init will grow the root filesystem automatically on the creation of the VM.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("qemu-img create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" qcow2 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" AlmaLinux-9-GenericCloud-9.2-20230513.x86_64.qcow2 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-F")]),a._v(" qcow2 wiki_example_almalinux92_snapshot.qcow2 20G\n")])])]),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),t("p",[a._v("If you face a permission error on image, snapshot, and Cloud-init ISO files, you can resolve it in the following ways:")]),a._v(" "),t("ul",[t("li",[a._v("You can move the image and snapshot to the "),t("code",[a._v("/var/lib/libvirt/images")]),a._v(" directory.")]),a._v(" "),t("li",[a._v("Change the ownership of file to "),t("code",[a._v("qemu")]),a._v(" user with "),t("code",[a._v("chown qemu:qemu")]),a._v(". On SELinux enforced systems, do not forget to change the context type too with "),t("code",[a._v("chcon -t virt_image_t")])])])]),a._v(" "),t("h2",{attrs:{id:"cloud-init"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cloud-init"}},[a._v("#")]),a._v(" Cloud-init")]),a._v(" "),t("p",[a._v("The "),t("a",{attrs:{href:"https://cloudinit.readthedocs.io/en/latest/reference/datasources/nocloud.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("NoCloud"),t("OutboundLink")],1),a._v(" datasource allows the user to provide "),t("code",[a._v("user-data")]),a._v(", "),t("code",[a._v("meta-data")]),a._v(" and "),t("code",[a._v("network-config")]),a._v(" to the VM without running a network service (or even without having a network at all). You can provide Meta-data and User-data files with "),t("code",[a._v("--cloud-init")]),a._v(" option of "),t("a",{attrs:{href:"https://virt-manager.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("virt-install"),t("OutboundLink")],1),a._v(" "),t("code",[a._v(">= 3.0.0")]),a._v(" or with an ISO file for versions `< 3.0.0.")]),a._v(" "),t("p",[a._v("The name of the default user on the AlmaLinux OS Generic Cloud images is "),t("code",[a._v("almalinux")]),a._v(" and it's locked. Therefore we need to inject a password or public ssh key for authentication. In this example, we do both: set a password and add public SSH keys for the "),t("code",[a._v("almalinux")]),a._v(" user.")]),a._v(" "),t("p",[a._v("These two main criteria must be met on the Cloud-init User Data:")]),a._v(" "),t("ul",[t("li",[a._v("The first line must be "),t("code",[a._v("#cloud-config")]),a._v(".")]),a._v(" "),t("li",[a._v("The syntax must be in "),t("code",[a._v("YAML")]),a._v(".")])]),a._v(" "),t("p",[t("code",[a._v("user-data:")])]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#cloud-config")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ssh_pwauth")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# sshd service will be configured to accept password authentication method")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("password")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" changeme "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Set a password for almalinux")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("chpasswd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("expire")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("false")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Don't ask for password reset after the first log-in")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ssh_authorized_keys")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Add your ssh public key for publickey authentication")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ssh"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("ed25519 AAAAB3NzaC1yc2EAAAABIwAAAQEA3I7VUf2l5gSn5uavROsc5HRDpZ turquoisekodkod@almalinux.example\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" ssh"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("rsa AAAAB3NzaC1yc2EAAAABIwAAAGEA3FSyQwBI6Z+nCSjUU sapphirecaracal@almalinux.example\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),t("p",[a._v("Refer to the Cloud-init modules "),t("a",{attrs:{href:"https://cloudinit.readthedocs.io/en/latest/topics/modules.html#",target:"_blank",rel:"noopener noreferrer"}},[a._v("list"),t("OutboundLink")],1),a._v(" for further customization options.")])]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),t("p",[a._v("You can close the console output of the VM with "),t("code",[a._v("Ctrl + ]")])])]),a._v(" "),t("p",[a._v("Start the VM - "),t("code",[a._v("virt-install >= 3.0.0")]),a._v(" with "),t("code",[a._v("--cloud-init")]),a._v(" option:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[a._v("#!/usr/bin/env bash")]),a._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("vm_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'wiki-example-almalinux92'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("vm_memory")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'2048'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("vm_cpus")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'2'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("vm_disk")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/var/lib/libvirt/images/wiki_example_almalinux92_snapshot.qcow2'")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ci_user_data")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'ci_user_data_ssh_auth_pass_pubkey'")]),a._v("\n\n\nvirt-install "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--connect")]),a._v(" qemu:///system "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$vm_name")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--memory")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$vm_memory")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--machine")]),a._v(" q35 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--vcpus")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$vm_cpus")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--cpu")]),a._v(" host-passthrough "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --cloud-init user-data"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ci_user_data")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--osinfo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("almalinux8 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--disk")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$vm_disk")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --virt-type kvm\n")])])]),t("p",[a._v("Start the VM - "),t("code",[a._v("virt-install < 3.0.0")])]),a._v(" "),t("p",[a._v("Create Cloud-init data ISO with User and Meta data files:")]),a._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),t("p",[a._v("The filename of Cloud-init user data, meta data must be renamed to "),t("code",[a._v("user-data")]),a._v(" and "),t("code",[a._v("meta-data")]),a._v(" and be placed on the root directory of ISO.")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("/user-data\n/meta-data\n")])])]),t("p",[a._v("The "),t("code",[a._v("meta-data")]),a._v(" can be empty for no meta-data option")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" meta-data\n")])])]),t("p",[a._v("xorriso (AlmaLinux OS 9)")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("xorriso "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-as")]),a._v(" genisoimage "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-output")]),a._v(" ci_data.iso "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-volid")]),a._v(" CIDATA "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-joliet")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rock")]),a._v(" user-data meta-data\n")])])]),t("p",[a._v("genisoimage (AlmaLinux OS 8)")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("genisoimage "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-output")]),a._v(" ci_data.iso "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-volid")]),a._v(" CIDATA "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-joliet")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rock")]),a._v(" user-data meta-data\n")])])]),t("p",[a._v("Create the VM with Cloud-init data ISO mounted:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[a._v("#!/usr/bin/env bash")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("vm_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'wiki-almalinux92'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("vm_memory")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'2048'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("vm_cpus")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'2'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("vm_disk")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/var/lib/libvirt/images/wiki_example_almalinux92_snapshot.qcow2'")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ci_dataiso")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/var/lib/libvirt/images/ci_data.iso'")]),a._v("\n\nvirt-install "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--connect")]),a._v(" qemu:///system "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$vm_name")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--memory")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$vm_memory")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--machine")]),a._v(" q35 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--vcpus")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$vm_cpus")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--cpu")]),a._v(" host-passthrough "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--osinfo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("almalinux9 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--disk")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$vm_disk")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--disk")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ci_dataiso")]),a._v('"')]),a._v(",device"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("cdrom "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     --virt-type kvm\n")])])]),t("p",[a._v("Get the IP address of the VM:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("virsh")]),a._v(" domainifaddr "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$VM_NAME")]),a._v("\n")])])]),t("h2",{attrs:{id:"static-ip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#static-ip"}},[a._v("#")]),a._v(" Static IP")]),a._v(" "),t("p",[a._v("To create a VM with static IPs rather than dynamic from DHCP, We need to create "),t("code",[a._v("network-config")]),a._v(" file in Networking config Version 1 or Networking config Version 2 format.")]),a._v(" "),t("p",[a._v("An example for a single interface VM on "),t("code",[a._v("192.168.122.0/24")]),a._v(" network, our "),t("code",[a._v("network-config")]),a._v(" file would be:")]),a._v(" "),t("p",[a._v("Networking config Version 1:")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("config")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" physical\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" eth0\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("subnets")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" static\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("address")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 192.168.122.92\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("netmask")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 255.255.255.0\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("gateway")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 192.168.122.1\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("dns_nameservers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" 192.168.122.1\n          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" 9.9.9.9\n")])])]),t("p",[a._v("Networking config Version 2:")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ethernets")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("eth0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("addresses")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" 192.168.122.92/24\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("gateway4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 192.168.124.1\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("nameservers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("addresses")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" 192.168.122.1\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" 9.9.9.9\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),t("p",[a._v("Please consult documenation pages of "),t("a",{attrs:{href:"https://cloudinit.readthedocs.io/en/latest/reference/network-config-format-v1.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Networking config Version 1"),t("OutboundLink")],1),a._v(" and "),t("a",{attrs:{href:"https://cloudinit.readthedocs.io/en/latest/reference/network-config-format-v2.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Networking config Version 2"),t("OutboundLink")],1),a._v(" for the full list of options.")])]),a._v(" "),t("p",[a._v("In virt-install/manager version "),t("code",[a._v(">= 4.1.0")]),a._v(" (available in AlmaLinux OS 9), you can use the "),t("code",[a._v("network-config")]),a._v(" sub-option of the "),t("code",[a._v("--cloud-init")]),a._v(" option.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[a._v("#!/usr/bin/env bash")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("vm_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'wiki-almalinux92'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("vm_memory")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'2048'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("vm_cpus")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'2'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("vm_disk")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/var/lib/libvirt/images/wiki_example_almalinux92_snapshot.qcow2'")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ci_user_data")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'ci_user_data_ssh_auth_pass_pubkey'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Cloud-init user-data")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ci_network_config")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'ci_network_config_192_168_122_92_v1'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Cloud-init network-config")]),a._v("\n\n\nvirt-install "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--connect")]),a._v(" qemu:///system "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$vm_name")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--memory")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$vm_memory")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--machine")]),a._v(" q35 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--vcpus")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$vm_cpus")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--cpu")]),a._v(" host-passthrough "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     --cloud-init user-data"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ci_user_data")]),a._v('"')]),a._v(",network-config"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ci_network_config")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--osinfo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("almalinux9 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--disk")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$vm_disk")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     --virt-type kvm\n")])])]),t("p",[a._v("On virt-install/manager "),t("code",[a._v("< 4.1.0")]),a._v(" (AlmaLinux OS 8), you will need to create a Cloud-init Data ISO in ISO 9660 format.")]),a._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),t("p",[a._v("The names of Cloud-init user data, meta data and networking config must be renamed to "),t("code",[a._v("user-data")]),a._v(", "),t("code",[a._v("meta-data")]),a._v(" and "),t("code",[a._v("network-config")]),a._v(" and be present on the root directory of ISO.")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("/user-data\n/meta-data\n/network-config\n")])])]),t("p",[a._v("Create the Cloud-init Data ISO:")]),a._v(" "),t("p",[a._v("The "),t("code",[a._v("meta-data")]),a._v(" file can be empty if no meta-data is needed.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" meta-data\n")])])]),t("p",[a._v("xorriso (AlmaLinux OS 9)")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("xorriso "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-as")]),a._v(" genisoimage "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-output")]),a._v(" ci_data.iso "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-volid")]),a._v(" CIDATA "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-joliet")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rock")]),a._v(" user-data meta-data network-config\n")])])]),t("p",[a._v("genisoimage (AlmaLinux OS 8)")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("genisoimage "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-output")]),a._v(" ci_data.iso "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-volid")]),a._v(" CIDATA "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-joliet")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rock")]),a._v(" user-data meta-data network-config\n")])])]),t("p",[a._v("Create the VM with Cloud-init data ISO mounted:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[a._v("#!/usr/bin/env bash")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("vm_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'wiki-almalinux92'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("vm_memory")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'2048'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("vm_cpus")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'2'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("vm_disk")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/var/lib/libvirt/images/wiki_example_almalinux92_snapshot.qcow2'")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ci_dataiso")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/var/lib/libvirt/images/ci_data.iso'")]),a._v("\n\nvirt-install "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--connect")]),a._v(" qemu:///system "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$vm_name")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--memory")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$vm_memory")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--machine")]),a._v(" q35 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--vcpus")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$vm_cpus")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--cpu")]),a._v(" host-passthrough "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--osinfo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("almalinux9 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--disk")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$vm_disk")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--disk")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ci_dataiso")]),a._v('"')]),a._v(",device"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("cdrom "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n     --virt-type kvm\n")])])]),t("h2",{attrs:{id:"virt-manager-gui"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#virt-manager-gui"}},[a._v("#")]),a._v(" Virt-Manager (GUI)")]),a._v(" "),t("p",[a._v("Unlike the virt-install, the virt-manager doesn't have an option to provide Cloud-init "),t("code",[a._v("user-data")]),a._v(", "),t("code",[a._v("meta-data")]),a._v(" and "),t("code",[a._v("network-config")]),a._v(" (Static IP). For that reason we can add Cloud-init data ISO to our VM as CDROM device.")]),a._v(" "),t("p",[a._v('"New VM" -> "Import existing disk image" -> Choose AlmaLinux OS image itself or snapshot, put a tick on the "Customize configuration before install" option.')]),a._v(" "),t("p",[a._v('"Add Hardware" -> "Storage" -> Select Device type as "CDROM", click on "Manage" and select Cloud-init data ISO and click on "Finish" button. Start the VM with the "Begin Installation".')]),a._v(" "),t("h2",{attrs:{id:"repackage-cloud-image"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#repackage-cloud-image"}},[a._v("#")]),a._v(" Repackage cloud image")]),a._v(" "),t("p",[a._v("shutdown VM:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("virsh")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("shutdown")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$VM_NAME")]),a._v("\n")])])]),t("p",[a._v("Convert the snapshot to the full image without touching backing file("),t("code",[a._v("AlmaLinux-8-GenericCloud-8.4-20210616.x86_64.qcow2")]),a._v("):")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("qemu-img convert "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O")]),a._v(" qcow2 doc-almalinux84-snapshot.qcow2 doc-almalinux84-base.qcow2\n")])])]),t("p",[a._v("You can reset, unconfigure and inject files to the image with "),t("code",[a._v("libguestfs virt-sysprep")]),a._v(". See the upstream documentation for further "),t("a",{attrs:{href:"https://libguestfs.org/virt-sysprep.1.html#options",target:"_blank",rel:"noopener noreferrer"}},[a._v("option"),t("OutboundLink")],1),a._v(" and "),t("a",{attrs:{href:"https://libguestfs.org/virt-sysprep.1.html#operations",target:"_blank",rel:"noopener noreferrer"}},[a._v("operations."),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("virt-sysprep "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--format")]),a._v(" qcow2 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" doc-almalinux84-base.qcow2\n")])])]),t("h2",{attrs:{id:"inspection-and-manipulation-of-images"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#inspection-and-manipulation-of-images"}},[a._v("#")]),a._v(" Inspection and Manipulation of images")]),a._v(" "),t("p",[a._v("Show a file inside the image")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("virt-cat "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" AlmaLinux-9-GenericCloud-9.2-20230513.x86_64.qcow2 /etc/cloud/cloud.cfg\n")])])]),t("p",[a._v("Show disk usage inside the image")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("virt-df "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" AlmaLinux-9-GenericCloud-9.2-20230513.x86_64.qcow2 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v("\n")])])]),t("p",[a._v("Display the OS infromation")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("virt-inspector "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" AlmaLinux-9-GenericCloud-9.2-20230513.x86_64.qcow2\n")])])]),t("p",[a._v("Get the version of "),t("code",[a._v("kernel")]),a._v(" package with the help of XPATH query")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("virt-inspector "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" AlmaLinux-9-GenericCloud-9.2-20230513.x86_64.qcow2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" virt-inspector "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--xpath")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'//application[name="kernel"]/version | //application[name="kernel"]/release\'')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("version"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.14")]),a._v("."),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("0")]),a._v("<")]),a._v("/version"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("release"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("284.11")]),a._v(".1.el9_"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v("<")]),a._v("/release"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("p",[a._v("Mount filesystems of an image.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" guest_mount "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Create the mount directoy")]),a._v("\nguestmount "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" AlmaLinux-9-GenericCloud-9.2-20230513.x86_64.qcow2 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--ro")]),a._v(" guest_mount/ "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Mount read-only with --ro")]),a._v("\nguestunmount guest-mount/ "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Unmount")]),a._v("\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),t("p",[a._v("You can check the "),t("a",{attrs:{href:"https://www.libguestfs.org",target:"_blank",rel:"noopener noreferrer"}},[a._v("libguestfs's website"),t("OutboundLink")],1),a._v(" for more documentation and more tools")])])])}),[],!1,null,null,null);t.default=r.exports}}]);